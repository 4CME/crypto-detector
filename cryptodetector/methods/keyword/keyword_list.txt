#/* <legal-notice>
#*
#* Copyright (c) 2016 Wind River Systems, Inc.
#*
#* This software has been developed and maintained under the Wind River
#* CodeSwap program. The right to copy, distribute, modify, or otherwise
#* make use of this software may be licensed only pursuant to the terms
#* of an applicable Wind River license agreement.
#*
#* <credits>
#*   { Kamyar Kaviani,  kamyar.kaviani@windriver.com}
#* </credits>
#*
#* </legal-notice>
#*/

#
# List of keywords
#
# \b is a special symbol that matches beginning or end of a token (word)
#
# Use \bword\b to search for whole-words
#
# "language" can be one of:
# 	"all" \(any text file),
# 	"source" \(any source code file),
# 	"c" \(C or C++),
# 	"python",
# 	"java",
# 	"shell",
# 	"perl",
# 	"javascript",
# 	"scala",
# 	"haskell",
# 	"pascal"

[{"match_type": "algorithm/asymmetric/DiffieHellman", "language": "all"}]
	"Diffie Hellman"
	"Diffie-Hellman"
	"Diffie_Hellman"
	"Diffie.Hellman"
	"DiffieHellman"
	"\bDHParameterSpec"
	"\bDHPublicKey"
	"\bDHPrivateKey"

[{"match_type": "algorithm/asymmetric/DSA", "language": "all"}]
	"\bDSA_"
	"_DSA\b"
	"_DSA_"
	"\bdsa\b"
	"\bDSAPrivateKey"
	"\bDSAPublicKey"
	"\bDSA_new"

[{"match_type": "algorithm/asymmetric/ECC", "language": "all"}]
	"Elliptic Curve"
	"Elliptic_Curve"
	"Elliptic-Curve"
	"Elliptic.Curve"
	"EllipticCurve"
	"ECDSA"
	"ECDH"
	"ECIES"
	"ECMQV"
	"ECNR"
	"\bCkDh\b"
	"CkCrypt2"
	"\becc_make_key"
	"1.2.840.10045.3.1.1"
	"secp192r1"
	"secp256r1"
	"secp521r1"

[{"match_type": "algorithm/asymmetric/ElGamal", "language": "all"}]
	"El Gamal"
	"El_Gamal"
	"El-Gamal"
	"El.Gamal"
	"ElGamal"
	"\bELG_secret_key"
	"\bELG_public_key"
	"\belg_generate"
	"\belg_encrypt"
	"\belg_decrypt"
	"\belg_sign"
	"\belg_verify"

[{"match_type": "algorithm/symmetric/block-cipher/GOST", "language": "all"}]
	"\bGOST 28147"
	"\bGOST_28147"
	"\bGOST-28147"
	"\bGOST28147"
	"1.2.643.2.2.30."
	"1.2.643.2.2.31."

[{"match_type": "algorithm/asymmetric/RSA", "language": "all"}]
	"\bRSA_"
	"_RSA\b"
	"_RSA_"
	"\brsa\b"
	"RSASignature"
	"\bX931"
	"\bX9_31"
	"\bX9-31"
	"\bX9.31"
	"\bOAEP"

[{"match_type": "algorithm/hash/generic", "language": "all"}]
	"\blhash"
	"\bhexdigest"

[{"match_type": "algorithm/hash/BLAKE", "language": "all"}]
	"\bBLAKE256"
	"\bBLAKE_256"
	"\bBLAKE 256"
	"\bBLAKE-256"
	"\bBLAKE2b"

[{"match_type": "algorithm/hash/HMAC", "language": "all"}]
	"\bHMAC"
	"\bHKDF"


[{"match_type": "protocol/MAC", "language": "all"}]
	"\bCMAC\b"
	"\bCMAC_"
	"\bDMAC\b"
	"\bDMAC_"
	"\bTTMAC\b"
	"\bVMAC"

[{"match_type": "algorithm/hash/CRC", "language": "all"}]
	"\bCRC32"

[{"match_type": "algorithm/hash/MD", "language": "all"}]
	"\bMDC2\b"
	"\bMD2\b"
	"\bMD4\b"
	"\bMD5\b"
	"_MD2\b"
	"_MD4\b"
	"_MD5\b"
	"\bMD2_"
	"\bMD4_"
	"\bMD5_"
	"_MD2_"
	"_MD4_"
	"_MD5_"
	"\bmdString"
	"0xd76aa478"
	"0xe8c7b756"
	"0x5A827999"

[{"match_type": "algorithm/hash/RIPEMD", "language": "all"}]
	"\bRIPEMD"
	"RIPEMD128"
	"RIPEMD160"
	"RIPEMD256"
	"RIPEMD320"

[{"match_type": "algorithm/hash/SHA", "language": "all"}]
	"\bSHAInit"
	"\bSHA1"
	"\bSHA-1"
	"\bSHA224"
	"\bSHA-224"
	"\bSHA_224"
	"\bSHA256"
	"\bSHA-256"
	"\bSHA_256"
	"\bSHA384"
	"\bSHA-384"
	"\bSHA_384"
	"\bSHA512"
	"\bSHA-512"
	"\bSHA_512"
	"\bSHA2"
	"\bSHA-2"
	"\bSHA3"
	"\bSHA-3"
	"0x67452301"

[{"match_type": "algorithm/hash/Tiger", "language": "all"}]
	"0x02aab17cf7e90c5e"
	"\btiger_init"
	"\btiger_final"
	"\btiger_context"

[{"match_type": "algorithm/hash/Whirlpool", "language": "all"}]
	"0x1823c6e887b8014f"
	"\bwhirlpool"

[{"match_type": "algorithm/hybrid/PGP", "language": "all"}]
	"PGP"
	"GPG"

[{"match_type": "algorithm/symmetric/block-cipher/AES", "language": "all"}]
	"\bAES_"
	"_AES\b"
	"_AES_"
	"\baes\b"
	"AES128"
	"\brijndael"
	"\bBMGL"
	"99, 124, 119, 123, 242, 107, 111, 197"

[{"match_type": "algorithm/symmetric/block-cipher/Blowfish", "language": "all"}]
	"blowfish"
	"0xD1310BA6"
	"0x8979FB1B"

[{"match_type": "algorithm/symmetric/block-cipher/Camellia", "language": "all"}]
	"Camellia"
	"0xA09E667F"

[{"match_type": "algorithm/symmetric/block-cipher/IntelCascade", "language": "all"}]
	"cascade_cipher"

[{"match_type": "algorithm/symmetric/block-cipher/CAST", "language": "all"}]
	"\bCAST5"
	"\bCAST6"
	"\bCAST128"
	"\bCAST-128"
	"\bCAST_128"
	"\bCAST256"
	"\bCAST-256"
	"\bCAST_256"
	"0x30fb40d4"
	"0x7EC90C04"
	"0x0F1946B8"

[{"match_type": "algorithm/symmetric/block-cipher/CRYPTON", "language": "all"}]
	"\bCRYPTON"

[{"match_type": "algorithm/symmetric/block-cipher/DES", "language": "all"}]
	"\bDES_"
	"_DES\b"
	"_DES_"
	"tripledes"
	"triple_des"
	"\b3DES"
	"DES-EDE"
	"DES-XEX"
	"\bDESX"
	"0x01010400"
	"58, 50, 42, 34, 26, 18, 10"
	"\bRawDES"

[{"match_type": "algorithm/symmetric/block-cipher/Feistel", "language": "all"}]
	"\bfeistel"
	"Luby Rackoff"
	"LubyRackoff"
	"Luby-Rackoff"

[{"match_type": "algorithm/symmetric/block-cipher/KASUMI", "language": "all"}]
	"\bKASUMI"

[{"match_type": "algorithm/symmetric/block-cipher/BEARLION", "language": "all"}]
	"\bbearlion"
	"\bbear-lion"
	"\bbear_lion"
	"\bbear lion"

[{"match_type": "algorithm/symmetric/block-cipher/IDEA", "language": "all"}]
	"\bideainit"
	"\bidea_encrypt"
	"\bidea_decrypt"
	"\bideaEncrypt"
	"\bideaDecrypt"

[{"match_type": "algorithm/symmetric/block-cipher/SAFER", "language": "all"}]
	"\bSAFERSK\b"
	"\bSAFERSK_"
	"\bSAFER_SK\b"
	"\bSAFER-SK\b"
	"\bSAFERK"
	"\bSAFER-K\b"
	"\bSAFER_K\b"

[{"match_type": "algorithm/symmetric/block-cipher/SHACAL", "language": "all"}]
	"\bSHACAL"

[{"match_type": "algorithm/symmetric/block-cipher/Anubis", "language": "all"}]
	"\bAnubis"

[{"match_type": "algorithm/symmetric/block-cipher/CSCipher", "language": "all"}]
	"\bCS_Cipher"
	"\bCS Cipher"
	"\bCS-Cipher"
	"\bCSCipher"

[{"match_type": "algorithm/symmetric/block-cipher/DFC", "language": "all"}]
	"\bDFCv2"

[{"match_type": "algorithm/symmetric/block-cipher/Diamond2", "language": "all"}]
	"\bDiamond2\b"

[{"match_type": "algorithm/symmetric/block-cipher/Serpent", "language": "all"}]
	"\bSerpent\b"
	"\bserpent_"

[{"match_type": "algorithm/symmetric/block-cipher/Twofish", "language": "all"}]
	"twofish"
	"0xA9, 0x67, 0xB3, 0xE8"
	"0xBCBC3275"

[{"match_type": "algorithm/symmetric/block-cipher/Threefish", "language": "all"}]
	"ThreeFish"

[{"match_type": "algorithm/symmetric/block-cipher/XTEA", "language": "all"}]
	"\bXTEA"

[{"match_type": "algorithm/symmetric/stream-cipher/ChaCha20", "language": "all"}]
	"\bChaCha20"

[{"match_type": "algorithm/symmetric/stream-cipher/Salsa20", "language": "all"}]
	"Salsa20"
	"Salsa_20"
	"Salsa-20"

[{"match_type": "algorithm/symmetric/stream-cipher/XSalsa20", "language": "all"}]
	"\bXSalsa20"

[{"match_type": "algorithm/symmetric/stream-cipher/SOSEMANUK", "language": "all"}]
	"\bSosemanuk"

[{"match_type": "algorithm/symmetric/block-cipher/MISTY1", "language": "all"}]
	"\bMISTY1"
	"0x1B, 0x32, 0x33, 0x5A"

[{"match_type": "algorithm/symmetric/block-cipher/NOEKEON", "language": "all"}]
	"\bnoekeon"

[{"match_type": "algorithm/symmetric/block-cipher/RC2", "language": "all"}]
	"\bRC2_128"
	"RC2_encrypt"
	"RC2_decrypt"
	"\bRC2Context"
	"\brc2_cbc"
	"\brc2_cfb"
	"\brc2_ecb"
	"\brc2_ofb"
	"\brc2-cbc"
	"\brc2-cfb"
	"\brc2-ecb"
	"\brc2-ofb"
	"\bRC2_BLOCK_SIZE"

[{"match_type": "algorithm/symmetric/stream-cipher/RC4", "language": "all"}]
	"\bArcfour"
	"\bRC4_128"
	"RC4_encrypt"
	"RC4_decrypt"
	"\bRC4Context"
	"\brc4_cbc"
	"\brc4_cfb"
	"\brc4_ecb"
	"\brc4_ofb"
	"\brc4-cbc"
	"\brc4-cfb"
	"\brc4-ecb"
	"\brc4-ofb"

[{"match_type": "algorithm/symmetric/block-cipher/RC5", "language": "all"}]
	"0xb7e15163"
	"RC5_encrypt"
	"RC5_decrypt"
	"\bRC5Context"
	"\brc5_cbc"
	"\brc5_cfb"
	"\brc5_ecb"
	"\brc5_ofb"
	"\brc5-cbc"
	"\brc5-cfb"
	"\brc5-ecb"
	"\brc5-ofb"

[{"match_type": "algorithm/symmetric/block-cipher/RC6", "language": "all"}]
	"RC6_encrypt"
	"RC6_decrypt"
	"\brc6_cbc"
	"\brc6_cfb"
	"\brc6_ecb"
	"\brc6_ofb"
	"\brc6-cbc"
	"\brc6-cfb"
	"\brc6-ecb"
	"\brc6-ofb"

[{"match_type": "algorithm/symmetric/block-cipher/SEED", "language": "all"}]
	"0x16c6d2d4"
	"0x3c6ef373"
	"\bseed_encrypt"
	"\bseed_decrypt"
	"\bseed_setkey"

[{"match_type": "library/BeeCrypt", "language": "all"}]
	"\bBeeCrypt"

[{"match_type": "library/BouncyCastle", "language": "source"}]
	"bouncycastle"

[{"match_type": "library/Botan", "language": "all"}]
	"\bbotan\b"
	"\bBOTAN_"

[{"match_type": "library/libgcrypt", "language": "all"}]
	"\bLibgcrypt"
	"\bGCRY_"

[{"match_type": "library/Crypto++", "language": "all"}]
	"\bCRYPTOPP"
	"ProcessAndXorBlock"
	"BlockCipherFinal"

[{"match_type": "library/cryptlib", "language": "all"}]
	"\bcryptlib"
	"\bcryptCreate"
	"\bcryptEncrypt"
	"\bcryptDecrypt"

[{"match_type": "library/OpenSSH", "language": "all"}]
	"\blibssh"
	"\bOpenSSH"

[{"match_type": "library/OpenSSL", "language": "all"}]
	"\blibssl"
	"\bOpenSSL"

[{"match_type": "library/SpongyCastle", "language": "all"}]
	"spongycastle"

[{"match_type": "protocol/kerberos", "language": "all"}]
	"kerberos"
	"\bKRB5_"

[{"match_type": "protocol/PKI", "language": "all"}]
	"pkcs"
	"\bx509"
	"\bx.509"
	"\bx-509"
	"PublicKey"
	"Public_Key"
	"PrivateKey"
	"Private_Key"
	"\bpubkey"
	"\bpub_key"
	"_pubkey"
	"priv_key"
	"\beSign\b"

[{"match_type": "protocol/SSH", "language": "all"}]
	"\bssh2"
	"\bssh_"
	"\bssh-"
	"\bssh\b"
	"_ssh\b"

[{"match_type": "protocol/SSL", "language": "all"}]
	"\bSSL_"
	"_SSL_"
	"_SSL\b"
	"\bssl\b"
	"\bossl_"
	"SSLSocket"

[{"match_type": "protocol/TLS", "language": "all"}]
	"TLSv1"
	"mbedtls"
	"\bgnutls"
	"\btls_cipher"
	"\btls_server"
	"\btls_client"

[{"match_type": "protocol/MQV", "language": "all"}]
	"\bMQV\b"
	"_MQV_"
	"\bMQV_Domain"

[{"match_type": "generic", "language": "all"}]
	"crypt"
	"krypt"
	"\bcipher"
	"_cipher"
	"\bgenerateWorkingKey"
	"\bBlockCipher"
	"\bStreamCipher"
	"\bkey_schedule"
	"MERSENNE"
